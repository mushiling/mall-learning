server:
  port: 8080
spring:
  servlet:
    multipart:
      enabled: true #开启文件上传
      max-file-size: 10MB #限制文件上传大小为10M
  main:
    allow-circular-references: true
  datasource:
    url: jdbc:mysql://192.168.10.130:3306/mall?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false
    username: root
    password: root
  redis:
    host: 192.168.10.130
    password: "000415"
    port: 6379
    timeout: 3000
  profiles:
    #    active: release
    active: dev
  data:
    elasticsearch:
      repositories:
        enabled: true
    mongodb:
      host: 192.168.10.130 # mongodb的连接地址
      port: 27017 # mongodb的连接端口号
      database: mall-port # mongodb的连接的数据库
  elasticsearch:
    uris: 192.168.10.130:9200
  rabbitmq:
    host: 192.168.10.130 # rabbitmq的连接地址
    port: 5672 # rabbitmq的连接端口号
    virtual-host: /mall # rabbitmq的虚拟host
    username: mall # rabbitmq的用户名
    password: msl123 # rabbitmq的密码
    publisher-confirm-type: correlated #如果对异步消息需要回调必须设置为true

mybatis:
  mapper-locations:
    - classpath:mapper/*.xml
    - classpath*:com/**/mapper/*.xml

# 自定义redis key
redis:
  key:
    prefix:
      authCode: "portal:authCode:"
    expire:
      authCode: 120 # 验证码超期时间

# 自定义jwt key
jwt:
  tokenHeader: Authorization #JWT存储的请求头
  secret: mySecret #JWT加解密使用的密钥
  expiration: 604800 #JWT的超期限时间(60*60*24)
  tokenHead: Bearer  #JWT负载中拿到开头
management:
  endpoint:
    health:
      show-details: always
# MinIO对象存储相关配置
minio:
  endpoint: http://192.168.10.130:9090 #MinIO服务所在地址
  bucketName: mall #存储桶名称
  accessKey: minioadmin #访问的key
  secretKey: minioadmin #访问的秘钥
